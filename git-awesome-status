#!/usr/bin/env perl
use strict;
use warnings;

my @order = (
    'Untracked files',
    'Working tree',
    'Index',
    'Local branches',
);

my %code_for = (
    'Untracked files' => sub {
        my $untracked_files = `git ls-files -z --exclude-standard --others --full-name`;
        return map { " $_\n" } split "\0", $untracked_files;
    },
    'Working tree' => sub {
        return `git diff --color --stat`;
    },
    'Index' => sub {
        return `git diff --color --stat --cached`;
    },
    'Local branches' => sub {
        my @branches = map { s/\s+$//; $_ } split /\n/, `git branch -l --color`;
        my %branch_output;
        for my $branch (@branches) {
            my $branchname = $branch;
            $branchname =~ s/^[\s*]+//;
            # strip ansi colors, ew
            # http://stackoverflow.com/questions/7394889/best-way-to-remove-ansi-color-escapes-in-unix
            $branchname =~ s/\e\[[\d;]*[a-zA-Z]//g;
            my $output = `git rev-list $branchname\@{u}..$branchname 2>&1`;
            if ($output =~ /No upstream branch found/ || $output =~ /unknown revision/) {
                $branch_output{$branch} = "No upstream";
                next;
            }

            my $status;
            if (my $lines = $output =~ tr/\n/\n/) {
                $status .= "\e[32m+$lines\e[m";
            }

            my $reverse = `git rev-list $branch..$branch\@{u} 2>&1`;
            if (my $reverse_lines = $reverse =~ tr/\n/\n/) {
                $status .= "\e[31m-$reverse_lines\e[m";
            }

            $branch_output{$branch} = $status
                if $status;
        }

        return map { " $_: $branch_output{$_}\n" } sort keys %branch_output;
    },
);

my $printed_block = 0;
for my $component (@order) {
    my @results = $code_for{$component}->();
    next unless @results;

    print "\n" if $printed_block;
    $printed_block++;

    print "$component:\n";
    print @results;
}
