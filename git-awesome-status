#!/usr/bin/env perl
use strict;
use warnings;

my @order = (
    'Untracked files',
    'Working tree',
    'Index',
    'Local branches',
);

my %code_for = (
    'Untracked files' => sub {
        my $untracked_files = `git ls-files -z --exclude-standard --directory --others --full-name`;
        return map { " $_\n" } split "\0", $untracked_files;
    },
    'Working tree' => sub {
        return `git diff --color --stat`;
    },
    'Index' => sub {
        return `git diff --color --stat --cached`;
    },
    'Local branches' => sub {
        my @branches = map { s/\s+$//; $_ } split /\n/, `git branch -l --color`;
        my @output;
        for my $colored_name (@branches) {
            my $plain_name = $colored_name;
            $plain_name =~ s/^[\s*]+//;
            # strip ansi colors, ew
            # http://stackoverflow.com/questions/7394889/best-way-to-remove-ansi-color-escapes-in-unix
            $plain_name =~ s/\e\[[\d;]*[a-zA-Z]//g;

            next if $plain_name eq '(no branch)';

            my $status = `git rev-list $plain_name\@{u}..$plain_name 2>&1`;
            if ($status =~ /No upstream branch found/ || $status =~ /unknown revision/) {
                push @output, " $colored_name: No upstream\n";
                next;
            }

            my $diff;
            if (my $lines = $status =~ tr/\n/\n/) {
                $diff .= "\e[32m+$lines\e[m";
            }

            my $reverse = `git rev-list $plain_name..$plain_name\@{u} 2>&1`;
            if (my $reverse_lines = $reverse =~ tr/\n/\n/) {
                $diff .= "\e[31m-$reverse_lines\e[m";
            }

            push @output, " $colored_name: $diff\n"
                if $diff;
        }

        return @output;
    },
);

my $printed_block = 0;
for my $component (@order) {
    my @results = $code_for{$component}->();
    next unless @results;

    print "\n" if $printed_block;
    $printed_block++;

    print "$component:\n";
    print @results;
}
